[{"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\index.js":"1","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\store\\reducers\\auth.js":"2","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\store\\actions\\auth.js":"3","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\UI\\Input.js":"4","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\Screens\\LoginScreen.js":"5","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\routes.js":"6","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\Screens\\NewLoginScreen.js":"7","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\Screens\\ContactScreen.js":"8","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\UI\\ImageIcon.js":"9","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\Header\\Header.js":"10","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\UI\\ContactCard.js":"11","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\Screens\\IframeTestScreen.js":"12","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\store\\reducers\\contacts.js":"13","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\hoc\\Card.js":"14","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\constants\\Colors.js":"15","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\models\\user.js":"16","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\models\\contact.js":"17","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\store\\actions\\contacts.js":"18","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\UI\\Loader.js":"19"},{"size":845,"mtime":1610271483886,"results":"20","hashOfConfig":"21"},{"size":509,"mtime":1610214033621,"results":"22","hashOfConfig":"21"},{"size":1880,"mtime":1610269859884,"results":"23","hashOfConfig":"21"},{"size":3249,"mtime":1610091701256,"results":"24","hashOfConfig":"21"},{"size":6464,"mtime":1610262316582,"results":"25","hashOfConfig":"21"},{"size":2061,"mtime":1610271984724,"results":"26","hashOfConfig":"21"},{"size":8264,"mtime":1610271539044,"results":"27","hashOfConfig":"21"},{"size":12113,"mtime":1610277063502,"results":"28","hashOfConfig":"21"},{"size":538,"mtime":1610271483888,"results":"29","hashOfConfig":"21"},{"size":4004,"mtime":1610273947147,"results":"30","hashOfConfig":"21"},{"size":2352,"mtime":1610263431920,"results":"31","hashOfConfig":"21"},{"size":2103,"mtime":1610129432026,"results":"32","hashOfConfig":"21"},{"size":567,"mtime":1610214030944,"results":"33","hashOfConfig":"21"},{"size":467,"mtime":1610041909962,"results":"34","hashOfConfig":"21"},{"size":185,"mtime":1610041909963,"results":"35","hashOfConfig":"21"},{"size":519,"mtime":1610271484032,"results":"36","hashOfConfig":"21"},{"size":298,"mtime":1610216063871,"results":"37","hashOfConfig":"21"},{"size":1612,"mtime":1610269738151,"results":"38","hashOfConfig":"21"},{"size":866,"mtime":1610273436952,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"5wp2zh",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\index.js",[],["85","86"],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\store\\reducers\\auth.js",["87"],"// import User from '../../models/user'\r\nimport { FETCH_USER, LOGOUT } from '../actions/auth';\r\n\r\nconst initialState = {\r\n    // pendingUsers: [],\r\n    // confirmedUsers: [],\r\n    user: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case LOGOUT:\r\n            return initialState;\r\n        default:\r\n            return state\r\n    }\r\n}",["88","89"],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\store\\actions\\auth.js",[],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\UI\\Input.js",["90","91","92"],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\Screens\\LoginScreen.js",["93","94","95","96","97","98","99","100","101"],"import React, { useState, useEffect, useReducer, useCallback, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\n//REDUX\r\nimport { useDispatch } from 'react-redux';\r\nimport * as authActions from '../store/actions/auth';\r\n\r\n//COMPONENTS\r\nimport Input from '../components/UI/Input';\r\nimport Card from '../hoc/Card';\r\n\r\n//CONSTANTS\r\nimport Colors from '../constants/Colors';\r\n\r\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\r\n\r\nconst formReducer = (state, action) => {\r\n    if (action.type === FORM_INPUT_UPDATE) {\r\n        const updatedValues = {\r\n            ...state.inputValues,\r\n            [action.input]: action.value\r\n        };\r\n        const updatedValidities = {\r\n            ...state.inputValidities,\r\n            [action.input]: action.isValid\r\n        };\r\n        let updatedFormIsValid = true;\r\n        for (const key in updatedValidities) {\r\n            updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\r\n        }\r\n        return {\r\n            formIsValid: updatedFormIsValid,\r\n            inputValidities: updatedValidities,\r\n            inputValues: updatedValues\r\n        };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst LoginScreen = props => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const dispatch = useDispatch();\r\n\r\n    const [formState, dispatchFormState] = useReducer(formReducer, {\r\n        inputValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        inputValidities: {\r\n            email: false,\r\n            password: false\r\n        },\r\n        formIsValid: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        // const googleLoginHandler = async () => {\r\n        //     console.log(\"Inside get user \")\r\n        //     try {\r\n        //         const { data } = await axios.get('http://localhost:3001/api/user', {\r\n        //             headers: {\r\n        //                 \"Access-Control-Allow-Origin\": \"*\",\r\n        //             }\r\n        //         })\r\n        //         console.log(data)\r\n        //     } catch (err) {\r\n        //         console.log(err)\r\n        //     }\r\n        // }\r\n        // googleLoginHandler()\r\n        (async () => {\r\n            const request = await fetch(\"http://localhost:3001/api/user\", {\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true,\r\n                },\r\n            });\r\n\r\n            const res = await request.json();\r\n            //In my case I stored user object in redux store\r\n            // if (request.status == 200) {\r\n            //     //Set User in Store\r\n            //     store.dispatch({\r\n            //         type: LOGIN_USER,\r\n            //         payload: {\r\n            //             user: res.user\r\n            //         }\r\n            //     });\r\n            // }\r\n            console.log(res)\r\n\r\n        })();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            // Alert.alert('An Error Occurred!', error, [\r\n            //     { text: 'Okay' }\r\n            // ])\r\n            alert(\"An Error Occureed\");\r\n        }\r\n        setError(null)\r\n\r\n    }, [error]);\r\n\r\n    const inputChangeHandler = useCallback(\r\n        (inputIdentifier, inputValue, inputValidity) => {\r\n            dispatchFormState({\r\n                type: FORM_INPUT_UPDATE,\r\n                value: inputValue,\r\n                isValid: inputValidity,\r\n                input: inputIdentifier\r\n            });\r\n        },\r\n        [dispatchFormState]\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\" style={styles.screen}>\r\n            <div style={styles.gradient}>\r\n                {/* <Card style={styles.authContainer}> */}\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Enter credentials</span>\r\n                    <div className=\"row\">\r\n                        <div className=\"col l3\"></div>\r\n                        <div className=\"col l6\">\r\n                            <Input\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                required\r\n                                type=\"email\"\r\n                                placeholder=\"Enter your email\"\r\n                                errorText=\"Please enter a valid Email.\"\r\n                                onInputChange={inputChangeHandler}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Input\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        required\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        errorText=\"Please enter a valid password.\"\r\n                        onInputChange={inputChangeHandler}\r\n                    />\r\n                    {/* <button /> */}\r\n                    {/* <div className=\"col s12 m6 offset-m3 center-align\"\r\n                     onClick={googleLoginHandler}>\r\n                        <a className=\"oauth-container btn darken-4 white black-text\" href=\"/auth/google\" style={{ textTransform: 'none' }}>\r\n                            <div className=\"left\">\r\n                                <img width=\"20px\" style={{ marginTop: '7px', marginRight: '8px' }} alt=\"Google sign-in\"\r\n                                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\" />\r\n                            </div>\r\n                            <p>Login with Google</p>\r\n                        </a>\r\n                    </div> */}\r\n                </div>\r\n                {/* </Card> */}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst styles = {\r\n    screen: {\r\n        // display: 'flex',\r\n        // flex: 'auto',\r\n        // flex: 1\r\n    },\r\n    gradient: {\r\n        // display: 'flex',\r\n        // flex: 'auto',\r\n        // flex: 1,\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center'\r\n        height: '100%'\r\n    },\r\n    authContainer: {\r\n        width: '80%',\r\n        maxWidth: 400,\r\n        // maxHeight: 400,\r\n        padding: 20\r\n    },\r\n    buttonContainer: {\r\n        marginTop: 10\r\n    }\r\n};\r\n\r\nexport default LoginScreen;","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\routes.js",[],["102","103"],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\Screens\\NewLoginScreen.js",["104"],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\Screens\\ContactScreen.js",["105"],"import React, { useState, useEffect, useCallback } from 'react'\r\nimport Header from '../components/Header/Header'\r\n// import FlatList from 'flatlist-react';\r\n// import ImageIcon from '../components/UI/ImageIcon';\r\nimport ContactCard from '../components/UI/ContactCard';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Loader from \"../components/UI/Loader\";\r\n\r\n// import Colors from '../constants/Colors'\r\n\r\nimport * as contactsActions from '../store/actions/contacts'\r\nimport * as authActions from '../store/actions/auth'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n    PhoneNumberUtil,\r\n    // using PNF alias to follow along with documentaion\r\n    PhoneNumberFormat as PNF\r\n} from 'google-libphonenumber';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst phoneUtil = PhoneNumberUtil.getInstance();\r\n\r\nconst getFormatedPhoneNumber = (phoneNumber) => {\r\n    try {\r\n        const number = phoneUtil.parse(phoneNumber, 'IN');\r\n\r\n        // console.log(phoneUtil.isPossibleNumber(number));\r\n        const ans = phoneUtil.format(number, PNF.INTERNATIONAL)\r\n        // console.log(ans);\r\n        return ans;\r\n    } catch (err) {\r\n        console.log(phoneNumber)\r\n        // console.log(err)\r\n    }\r\n    return phoneNumber\r\n}\r\n\r\nconst ContactScreen = props => {\r\n    const history = useHistory()\r\n\r\n    const user = useSelector(state => state.auth.user)\r\n    const contacts = useSelector(state => state.contacts.contacts)\r\n    // console.log(user[0].daysFromJoining)\r\n    const dispatch = useDispatch()\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // const [isRefreshing, setIsRefreshing] = useState(false);\r\n    const [error, setError] = useState();\r\n    // const [contactCards, setContactCards] = useState([]);\r\n\r\n    const loadUser = useCallback(async () => {\r\n        setError(null);\r\n        // setIsRefreshing(true);\r\n        try {\r\n            await dispatch(authActions.fetchUser())\r\n        } catch (err) {\r\n            console.log(err.message)\r\n            setError(err.message);\r\n        }\r\n        // setIsRefreshing(false);\r\n    }, [dispatch, setError]);\r\n\r\n    const loadContacts = useCallback(async () => {\r\n        setError(null);\r\n        // setIsRefreshing(true);\r\n        try {\r\n            await dispatch(contactsActions.fetchContacts())\r\n        } catch (err) {\r\n            console.log(err.message)\r\n            setError(err.message);\r\n        }\r\n        // setIsRefreshing(false);\r\n    }, [dispatch, setError]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        loadUser().then(() => {\r\n            // setIsLoading(false)\r\n            // setAverageHealth(HEALTH)\r\n            // setStatus(true)\r\n            loadContacts().then(() => {\r\n                setIsLoading(false)\r\n                // setAverageHealth(HEALTH)\r\n                // setStatus(true)\r\n            });\r\n        });\r\n\r\n        // setIsLoading(false)\r\n    }, [dispatch, loadContacts, loadUser]);\r\n\r\n    // useEffect(() => {\r\n    //     // const willFocusSub = props.navigation.addListener('willFocus', () => {\r\n    //         loadContacts();\r\n    //     // })\r\n\r\n    //     // return () => { willFocusSub.remove(); }\r\n    // }, [loadContacts]);\r\n\r\n\r\n    if (error) {\r\n        // console.log(error)\r\n        return (\r\n            <div style={{ ...styles.centered, ...{ height: window.innerHeight } }}>\r\n                <div><h4>An error Occurred!</h4></div>\r\n                <div><h5>{error}</h5></div>\r\n                <div><h4></h4></div>\r\n                {/* <div><button onClick={loadContacts} style={styles.button} >Try Again</button></div> */}\r\n                <button class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" style={styles.button} onClick={() => history.push('/')}>\r\n                    Try Again\r\n                    <i class=\"material-icons error-outline\"></i>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div style={{ ...styles.centered, ...{ height: window.innerHeight } }}>\r\n                {/* <ActivityIndicator size='large' color={Colors.primary} /> */}\r\n                {/* <p>Loading...</p> */}\r\n                <Loader />\r\n            </div>\r\n        );\r\n    }\r\n    console.log(user)\r\n    console.log(contacts)\r\n    if (!user || !contacts) {\r\n        return (\r\n            <div style={{ ...styles.centered, ...{ height: window.innerHeight } }}>\r\n                {/* <p>Loading...</p> */}\r\n                <Loader />\r\n                {/* <ActivityIndicator size='large' color={Colors.primary} /> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    // ALL CONTACT CARDS DETAILS HERE\r\n\r\n    // if(!!user && !!contacts) {\r\n\r\n    // }\r\n    // const getContactsCards = () => {\r\n    //     if (!contacts) {\r\n    //         console.log(\"Inside map contact not\")\r\n    //         return <div>Loading...</div>\r\n    //     } else {\r\n    //         console.log(\"Inside map\")\r\n    //         contacts.map(contact => {\r\n    //             <ContactCard\r\n    //                 imgLink={contact.photoUrl}\r\n    //                 name={contact.name}\r\n    //                 email={contact.email}\r\n    //                 phoneNumber={getFormatedPhoneNumber(contact.phoneNumber)}\r\n    //             />\r\n    //         }\r\n    //         )\r\n    //         // console.log(phoneUtil.format(number, PNF.INTERNATIONAL));\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div style={styles.mainContainer}>\r\n            {/* <div className={`sticky-wrapper${isSticky ? ' sticky' : ''}`} ref={ref}> */}\r\n            <Header\r\n                imgLink={user.photo}\r\n                givenName={user.givenName}\r\n                familyName={user.familyName}\r\n                email={user.email}\r\n            />\r\n            <div className=\"container\">\r\n                <div className=\"row\" style={styles.topHeading}>\r\n                    <span style={styles.mainTitle}>Contacts<span style={styles.totalContacts}>({contacts.length})</span></span>\r\n                </div>\r\n                <div className=\"row\" style={styles.detailsHeading}>\r\n                    {/* <div className=\"col l1 m1 s1\">\r\n                    </div> */}\r\n                    <div className=\"col l2 m2 s2\">\r\n                        <p style={{ ...styles.textStyleHeading, ...{ textAlign: 'center' } }}>NAME</p>\r\n                    </div>\r\n                    <div className=\"col l3 m2 s2\">\r\n                    </div>\r\n                    <div className=\"col l2 m2 s2\">\r\n                        <p style={styles.textStyleHeading}>EMAIL</p>\r\n                    </div>\r\n                    <div className=\"col l2 m2 s2\">\r\n                    </div>\r\n                    <div className=\"col l2 m2 s2\">\r\n                        <p style={{ ...styles.textStyleHeading }}>PHONE NUMBER</p>\r\n                    </div>\r\n                    <div className=\"col l1 m1 s1\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n            <div className=\"container\">\r\n                <Scrollbars style={{ height: window.innerHeight - 225 }}>\r\n                    {contacts.map((contact, index) => (\r\n                        <ContactCard\r\n                            imgLink={`${contact.photoUrl}?key=AIzaSyBC_Hj56Os26QOk7yurrdj3IFKXH7VVqWQ&access_token=${user.accessToken}`}\r\n                            name={contact.name}\r\n                            email={contact.email}\r\n                            phoneNumber={getFormatedPhoneNumber(contact.phoneNumber)}\r\n                            key={index}\r\n\r\n                        />)\r\n                    )}\r\n                    {/* {getContactCards} */}\r\n                    {/* <ContactCard\r\n                    imgLink=\"https://www.w3schools.com/howto/img_avatar.png\"\r\n                    name=\"Adrian Simpson\"\r\n                    email=\"simpsonadrian@bee.com\"\r\n                    phoneNumber=\"986-632-6262\"\r\n                />\r\n                <ContactCard\r\n                    imgLink=\"https://www.w3schools.com/howto/img_avatar.png\"\r\n                    name=\"Amelia Carpenter\"\r\n                    email=\"amelia.carp@soandso.com\"\r\n                    phoneNumber=\"181-542-1902\"\r\n                />\r\n                <ContactCard\r\n                    imgLink=\"https://www.w3schools.com/howto/img_avatar.png\"\r\n                    name=\"Amelia Carpenter\"\r\n                    email=\"amelia.carp@soandso.com\"\r\n                    phoneNumber=\"181-542-1902\"\r\n                />\r\n                <ContactCard\r\n                    imgLink=\"https://www.w3schools.com/howto/img_avatar.png\"\r\n                    name=\"Amelia Carpenter\"\r\n                    email=\"amelia.carp@soandso.com\"\r\n                    phoneNumber=\"181-542-1902\"\r\n                />\r\n                <ContactCard\r\n                    imgLink=\"https://www.w3schools.com/howto/img_avatar.png\"\r\n                    name=\"Amelia Carpenter\"\r\n                    email=\"amelia.carp@soandso.com\"\r\n                    phoneNumber=\"181-542-1902\"\r\n                />\r\n                <ContactCard\r\n                    imgLink=\"https://www.w3schools.com/howto/img_avatar.png\"\r\n                    name=\"Amelia Carpenter\"\r\n                    email=\"amelia.carp@soandso.com\"\r\n                    phoneNumber=\"181-542-1902\"\r\n                />\r\n                <ContactCard\r\n                    imgLink=\"https://www.w3schools.com/howto/img_avatar.png\"\r\n                    name=\"Amelia Carpenter\"\r\n                    email=\"amelia.carp@soandso.com\"\r\n                    phoneNumber=\"181-542-1902\"\r\n                />\r\n                <ContactCard\r\n                    imgLink=\"https://www.w3schools.com/howto/img_avatar.png\"\r\n                    name=\"Amelia Carpenter\"\r\n                    email=\"amelia.carp@soandso.com\"\r\n                    phoneNumber=\"181-542-1902\"\r\n                /> */}\r\n                </Scrollbars>\r\n            </div>\r\n            {/* <div className=\"container\">\r\n                <iframe src=\"/contactList\" width={window.innerWidth*0.7} height={window.innerHeight - 225} frameBorder=\"0\"/>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    centered: {\r\n        backgroundColor: '#E5E5E5',\r\n        // position: 'fixed',\r\n        // top: 50,  \r\n        // margin: 'auto',\r\n        // width: '50%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n        // height: 200,\r\n        // border: '3px solid green',\r\n    },\r\n    button: {\r\n        background: '#0F4EAC',\r\n        color: '#FFFFFF'\r\n    },\r\n    mainContainer: {\r\n        backgroundColor: '#E5E5E5',\r\n        height: '100%'\r\n    },\r\n    stickHeader: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        // width: '100%'\r\n    },\r\n    topHeading: {\r\n        marginTop: 32\r\n    },\r\n    mainTitle: {\r\n        fontFamily: 'Poppins',\r\n        fontWeight: 600,\r\n        fontSize: 26,\r\n        lineHeight: '39px',\r\n        letterSpacing: '0.06em',\r\n        color: '#053ED1'\r\n    },\r\n    totalContacts: {\r\n        fontFamily: 'Poppins',\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        lineHeight: '24px',\r\n        color: '#053ED1',\r\n        marginLeft: 10,\r\n    },\r\n    detailsHeading: {\r\n        marginBottom: 5\r\n    },\r\n    textStyleHeading: {\r\n        fontFamily: 'Poppins',\r\n        fontWeight: 500,\r\n        fontSize: 12,\r\n        lineHeight: '18px',\r\n        color: '#B0C6FF',\r\n    },\r\n    card: {\r\n        background: '#FFFFFF',\r\n        boxShadow: '0px 2px 6px rgba(5, 62, 209, 0.14)',\r\n        borderRadius: '8px',\r\n    },\r\n    image: {\r\n        marginTop: 12,\r\n        marginBottom: 12\r\n    },\r\n    textName: {\r\n        margin: 0,\r\n        fontFamily: 'Poppins',\r\n        fontWeight: 500,\r\n        fontSize: 14,\r\n        lineHeight: '21px',\r\n        color: '#000000',\r\n        marginTop: 21\r\n    },\r\n    textEmail: {\r\n        margin: 0,\r\n        fontFamily: 'Poppins',\r\n        fontWeight: 400,\r\n        fontSize: 14,\r\n        lineHeight: '18px',\r\n        color: '#000000',\r\n        marginTop: 21\r\n    }\r\n}\r\n\r\nexport default ContactScreen","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\UI\\ImageIcon.js",["106"],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\Header\\Header.js",[],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\UI\\ContactCard.js",[],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\Screens\\IframeTestScreen.js",[],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\store\\reducers\\contacts.js",["107"],"// import User from '../../models/user'\r\nimport { FETCH_CONTACTS } from '../actions/contacts'\r\nimport { LOGOUT } from '../actions/auth';\r\n\r\nconst initialState = {\r\n    // pendingUsers: [],\r\n    // confirmedUsers: [],\r\n    contacts: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case LOGOUT:\r\n            return initialState;\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\hoc\\Card.js",[],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\constants\\Colors.js",["108"],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\models\\user.js",[],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\models\\contact.js",[],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\store\\actions\\contacts.js",[],"D:\\Studies\\Zluri\\Project\\Try1\\contacts1\\client\\src\\components\\UI\\Loader.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":1,"nodeType":"115","endLine":22,"endColumn":2},{"ruleId":"109","replacedBy":"116"},{"ruleId":"111","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":40,"column":8,"nodeType":"120","endLine":40,"endColumn":39,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":45,"column":38,"nodeType":"124","messageId":"125","endLine":45,"endColumn":39,"suggestions":"126"},{"ruleId":"122","severity":1,"message":"123","line":45,"column":63,"nodeType":"124","messageId":"125","endLine":45,"endColumn":64,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":63,"nodeType":"130","messageId":"131","endLine":1,"endColumn":69},{"ruleId":"128","severity":1,"message":"132","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"133","line":6,"column":13,"nodeType":"130","messageId":"131","endLine":6,"endColumn":24},{"ruleId":"128","severity":1,"message":"134","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":12},{"ruleId":"128","severity":1,"message":"135","line":13,"column":8,"nodeType":"130","messageId":"131","endLine":13,"endColumn":14},{"ruleId":"128","severity":1,"message":"136","line":42,"column":12,"nodeType":"130","messageId":"131","endLine":42,"endColumn":21},{"ruleId":"128","severity":1,"message":"137","line":42,"column":23,"nodeType":"130","messageId":"131","endLine":42,"endColumn":35},{"ruleId":"128","severity":1,"message":"138","line":44,"column":11,"nodeType":"130","messageId":"131","endLine":44,"endColumn":19},{"ruleId":"128","severity":1,"message":"139","line":46,"column":12,"nodeType":"130","messageId":"131","endLine":46,"endColumn":21},{"ruleId":"109","replacedBy":"140"},{"ruleId":"111","replacedBy":"141"},{"ruleId":"128","severity":1,"message":"142","line":17,"column":7,"nodeType":"130","messageId":"131","endLine":17,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":108,"column":22,"nodeType":"145","endLine":108,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":6,"column":13,"nodeType":"145","endLine":11,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":11,"column":1,"nodeType":"115","endLine":23,"endColumn":2},{"ruleId":"113","severity":1,"message":"148","line":1,"column":1,"nodeType":"115","endLine":9,"endColumn":2},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["149"],["150"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["151"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["152","153"],["154","155"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'authActions' is defined but never used.","'Card' is defined but never used.","'Colors' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'formState' is assigned a value but never used.",["149"],["150"],"'FORM_INPUT_UPDATE' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"messageId":"158","fix":"159","desc":"160"},{"messageId":"161","fix":"162","desc":"163"},{"messageId":"158","fix":"164","desc":"160"},{"messageId":"161","fix":"165","desc":"163"},"Update the dependencies array to be: [inputState, onInputChange, id, props]",{"range":"166","text":"167"},"removeEscape",{"range":"168","text":"169"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"170","text":"171"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"172","text":"169"},{"range":"173","text":"171"},[978,1009],"[inputState, onInputChange, id, props]",[1167,1168],"",[1167,1167],"\\",[1192,1193],[1192,1192]]